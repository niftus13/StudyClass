-- 20230413
-- exam_madang_4

--1 마당서점의고객이요구하는다음질문에대해SQL 문을작성하시오.

--(5) 박지성이구매한도서의출판사수
SELECT COUNT(DISTINCT B.PUBLISHER)
FROM BOOK B, CUSTOMER C , ORDERS O
WHERE C.CUSTID = O.CUSTID 
AND B.BOOKID = O.BOOKID
AND(C.NAME = '박지성');
--(6) 박지성이구매한도서의이름, 가격, 정가와판매가격의차이
SELECT B.BOOKNAME , B.PRICE , B.PRICE - O.SALEPRICE AS "MARGIN"
FROM BOOK B, CUSTOMER C , ORDERS O
WHERE C.CUSTID = O.CUSTID 
AND B.BOOKID = O.BOOKID
AND (C.NAME = '박지성');
--(7) 박지성이구매하지않은도서의이름
SELECT B.BOOKNAME
FROM BOOK B
MINUS
SELECT B.BOOKNAME
FROM BOOK B, CUSTOMER C , ORDERS O
WHERE C.CUSTID = O.CUSTID 
AND B.BOOKID = O.BOOKID
AND (C.NAME = '박지성');

-- 구매한 도서를 찾고 해당 범위를 반전
-- 박지성이 구매한 도서의 BOOKID
SELECT DISTINCT BOOKID FROM ORDERS O, CUSTOMER C WHERE O.CUSTID = C.CUSTID AND C.NAME = '박지성';

SELECT B.BOOKNAME
FROM BOOK B
WHERE B.BOOKID NOT IN (SELECT DISTINCT BOOKID   
                        FROM ORDERS O, CUSTOMER C 
                        WHERE O.CUSTID = C.CUSTID 
                        AND C.NAME = '박지성');


--2 마당서점의운영자와경영자가요구하는다음질문에대해SQL 문을작성하시오.

--(8) 주문하지않은고객의이름(부속질의사용)
-- 구매를 한 고객의 번호
SELECT DISTINCT CUSTID FROM ORDERS;

SELECT C.CUSTID
FROM CUSTOMER C
WHERE C.CUSTID NOT IN(SELECT DISTINCT CUSTID FROM ORDERS);
-- 구매이력이 있는 고객 (EXISTS)
SELECT *
FROM CUSTOMER C 
WHERE NOT EXISTS (SELECT * --SELECT의 결과가 1행이라도 있으면 참(상관관계에서만)
                    FROM ORDERS O 
                    WHERE C.CUSTID = O.CUSTID ); 
                    

--(9) 주문금액의 총액과 주문의 평균금액
SELECT SUM(SALEPRICE) TOTAL, ROUND(AVG(SALEPRICE))
FROM ORDERS O;

--(10) 고객의이름과 고객별구매액
-- GROUP BY, C.CUSTID, C.NAME
-- ORDERS JOIN CUSTOMER
SELECT C.NAME, SUM(O.SALEPRICE) AS TOTAL
FROM ORDERS O, CUSTOMER C
WHERE O.CUSTID = C.CUSTID
GROUP BY C.CUSTID, C.NAME
ORDER BY C.CUSTID
;

--(11) 고객의이름과고객이구매한도서목록
SELECT C.NAME, B.BOOKNAME
FROM CUSTOMER C, ORDERS O, BOOK B
WHERE O.CUSTID = C.CUSTID
AND B.BOOKID = O.BOOKID;

--(12) 도서의가격(Book 테이블)과판매가격(Orders 테이블)의차이가가장많은주문
-- 정가 - 판매가 => 최대 차이 MAX()
SELECT MAX(B.PRICE - O.SALEPRICE)
FROM ORDERS O, BOOK B
WHERE O.BOOKID = B.BOOKID;

SELECT O.ORDERID, B.BOOKNAME,  B.PRICE, B.PRICE-O.SALEPRICE AS GAP
FROM ORDERS O, BOOK B
WHERE O.BOOKID = B.BOOKID
AND PRICE- SALEPRICE =(SELECT MAX(B.PRICE - O.SALEPRICE)
                        FROM ORDERS O, BOOK B
                            WHERE O.BOOKID = B.BOOKID)
;

--(13) 도서의판매액평균보다자신의구매액평균이더높은고객의이름
-- 고객별 총 판매액 출력 조건 --> 총 평균보다 더 높은 값을 가지는 고객만
SELECT C.CUSTID, C.NAME, AVG(O.SALEPRICE)
FROM ORDERS O, CUSTOMER C
WHERE O.CUSTID = C.CUSTID
GROUP BY C.CUSTID ,C.NAME
HAVING AVG(O.SALEPRICE) > (SELECT AVG(SALEPRICE) FROM ORDERS)
ORDER BY C.CUSTID;

SELECT AVG(SALEPRICE) FROM ORDERS;
 

--3. 마당서점에서 다음의 심화된 질문에 대해 SQL 문을 작성하시오.

--(1) 박지성이 구매한 도서의 출판사와 같은 출판사에서 도서를 구매한 고객의 이름
-- ORDERS , BOOK  => PUBLISHER IN ()
-- 박지성이 구매한 도서의 출판사 이름

SELECT PUBLISHER
FROM ORDERS O , BOOK B, CUSTOMER C
WHERE O.CUSTID = C.CUSTID
AND B.BOOKID = O.BOOKID
AND C.NAME = '박지성'
;

SELECT C.NAME
FROM ORDERS O, BOOK B, CUSTOMER C
WHERE O.BOOKID = B.BOOKID AND O.CUSTID = C.CUSTID
AND B.PUBLISHER IN (SELECT B.PUBLISHER
                    FROM ORDERS O , BOOK B, CUSTOMER C
                    WHERE O.CUSTID = C.CUSTID
                    AND B.BOOKID = O.BOOKID
                    AND C.NAME = '박지성'
)
AND C.NAME <>'박지성';

--(2) 두 개 이상의 서로 다른 출판사에서 도서를 구매한 고객의 이름
-- GROUP BY CUSTID, NAME
-- 고객별 구매한 도서의 출판사의 수 
SELECT C.CUSTID, C.NAME, COUNT(DISTINCT B.PUBLISHER)
FROM ORDERS O, BOOK B, CUSTOMER C
WHERE O.BOOKID = B.BOOKID AND O.CUSTID = C.CUSTID
GROUP BY C.CUSTID, C.NAME
HAVING COUNT(DISTINCT B.PUBLISHER) > 1
ORDER BY C.CUSTID
;

-- 2개이상 출판사의 책을 구매한 회원ID
SELECT CUSTID
FROM CUSTOMER
WHERE CUSTID IN (SELECT O.CUSTID 
                FROM ORDERS O, BOOK B
                WHERE O.BOOKID = B.BOOKID
                GROUP BY O.CUSTID
                HAVING COUNT(DISTINCT B.PUBLISHER)>1)
;



